<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">    

    <context:property-placeholder location="classpath:jdbc.properties" />
    
    <context:component-scan base-package="com.good" /> 
  
    <!-- data source1-->  
    <bean id="source1" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">  
        <property name="uniqueResourceName" value="source1DB" />  
        <property name="driverClassName">  
            <value>${source1.jdbc.driver}</value>  
        </property>  
        <property name="url">  
            <value>${source1.jdbc.url}</value>  
        </property>  
        <property name="user">  
            <value>${source1.jdbc.username}</value>  
        </property>  
        <property name="password">  
            <value>${source1.jdbc.password}</value>  
        </property>  
    </bean>  
     
    <!--data source2 -->
   <bean id="source2" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean">  
        <property name="uniqueResourceName" value="source2DB" />  
       <property name="driverClassName">  
            <value>${source2.jdbc.driver}</value>  
        </property>  
        <property name="url">  
            <value>${source2.jdbc.url}</value>  
        </property>  
        <property name="user">  
            <value>${source2.jdbc.username}</value>  
        </property>  
        <property name="password">  
            <value>${source2.jdbc.password}</value>  
        </property>  
    </bean>  
    
    <bean id="source1SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="source1" />  
        <property name="mapperLocations" value="classpath:com/good/web/dao/source1/**/xml/*Mapper.xml" />  
    </bean>  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.good.web.dao.source1" />  
        <property name="sqlSessionFactoryBeanName" value="source1SqlSessionFactory" />  
    </bean>
    
    
    <bean id="source2SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="source2" />  
        <property name="mapperLocations" value="classpath:com/good/web/dao/source2/**/xml/*Mapper.xml" />  
    </bean>  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.good.web.dao.source2" />  
        <property name="sqlSessionFactoryBeanName" value="source2SqlSessionFactory" />  
    </bean>    
    
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"  
          init-method="init" destroy-method="close">  
        <property name="forceShutdown">  
            <value>true</value>  
        </property>  
    </bean>  
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">  
        <property name="transactionTimeout" value="300" />  
    </bean>  
  
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">  
        <property name="transactionManager">  
            <ref bean="atomikosTransactionManager"/>  
        </property>  
        <property name="userTransaction">  
            <ref bean="atomikosUserTransaction"/>  
        </property>  
        <!--JtaTransactionManager does not support custom isolation levels by default -->  
        <property name="allowCustomIsolationLevels" value="true"/>  
    </bean>  
  
    <aop:config proxy-target-class="true">  
        <aop:advisor pointcut="execution(* *com.good.web.service..*(..))" advice-ref="txAdvice" />  
    </aop:config>  
   
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="insert*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />  
            <tx:method name="save*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />    
            <tx:method name="delete*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />  
            <tx:method name="del*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />  
            <tx:method name="update*"  propagation="REQUIRED"  rollback-for="java.lang.Exception" />  
        </tx:attributes>  
    </tx:advice>
      
</beans>